version: '2.0'

volumes:
  postgres_data:
    driver: local
  bundle_cache:

services:
  server:
    build:
      context: ./site_visit_server
      dockerfile: DockerfileRegistry
    image: site_visit_server
    # command: bash -c "bundle exec rails s -p 8000 -b '0.0.0.0'"
    command: bundle exec rails s -e development_docker -p 8000 -b '0.0.0.0'
    # environment:
    #   - VIRTUAL_HOST=engine.ddx
    volumes:
      # - .:/site_visit_server
      - bundle_cache:/bundle
    depends_on:
      - db
    ports:
       - "8000:8000"

  db:
    image: postgres:10.0
    ports:
      - 5432:5432
    volumes:
      - ./db/dumps:/db/dumps
      - ./tmp:/tmp
      # # # Mount our 'restoredb' script:
      # # - ./bin/restoredb:/bin/restoredb:ro
      # # Mount our 'dumpdb' script:
      # - ./bin/dumpdb:/bin/dumpdb:ro
      # We'll mount the 'postgres-data' volume into the location Postgres stores it's data:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password

  client:
    build: ./site_visit_client
    image: site_visit_client
    command: yarn start
    # environment:
    #   - API_URL=http://api
    #   - VIRTUAL_HOST=forecasting.workers.cloud
    # volumes:
    #   - client-deps:/app/node_modules
    ports:
      - 80:4000
    # expose:
    #   - '80'
